#!/bin/bash

# Q&D script to tweet voter info to a random sequence of all the states, separated
# by random intervals.  The cycle fits into ~24hrs.  Meant to run in the background over
# the course of a day.

# Be careful to quote multi-word names into the array
state_gen="
from urlsbystate import URLS_BY_STATE

for state in URLS_BY_STATE.keys():
    if ' ' in state:
        # Ensure shell keeps words in a string
        print(f'\"{state}\" ')
    else:
        print(f'{state} ')
"
eval state_seq=( `python -c "$state_gen" | shuf` )

# Calibration: minimum 10 min. interval.  Set of len(state_seq) intervals adds to "Elapsed:"
# hours, so all states will be tweeted within about a day.  Set by experiment.
interval_seq=( `count=1; time=600; incr=20; len=${#state_seq[@]};
		while [ $count -lt $len ]; do
			echo $time; time=$(($time + $incr)); count=$(($count + 1));
		done | shuf` )
interval_seq=( ${interval_seq[@]} 0 )	# Terminate interval list
echo "Elapsed:" $(((`echo ${interval_seq[*]} | sed 's/ /+/g'`) / 60)) "min."

# Print schedule of tweets
i=0
echo -n "States & intervals: "
while [ -n "${state_seq[$i]}" -a -n "${interval_seq[$i]}" ]; do
	echo -n ${state_seq[$i]} ${interval_seq[$i]} " "
	i=$(($i + 1))
done

# Enter tweeting loop
i=0
while [ -n "${state_seq[$i]}" -a -n "${interval_seq[$i]}" ]; do
	echo
	echo "State $(($i + 1)): ${state_seq[$i]}, interval ${interval_seq[$i]}"
	python voterinfo.py "${state_seq[$i]}"
	sleep ${interval_seq[$i]}
	i=$(($i + 1))
done

